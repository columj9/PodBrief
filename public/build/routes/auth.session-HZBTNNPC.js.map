{
  "version": 3,
  "sources": ["../../../app/routes/auth.session.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/auth.session.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/auth.session.tsx\");\n  import.meta.hot.lastModified = \"1741246892813.791\";\n}\n// REMIX HMR END\n\nimport { redirect } from \"@remix-run/node\";\nimport { createUserSession } from \"~/utils/session.server\";\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const accessToken = formData.get(\"access_token\");\n  const next = formData.get(\"next\") || \"/dashboard\";\n  if (!accessToken) {\n    return redirect(\"/login?error=No access token provided\");\n  }\n\n  // Create a user session with the access token\n  return createUserSession(accessToken, next);\n}\n\n// This component will never be rendered, but is required\nexport default function AuthSession() {\n  return null;\n}\n_c = AuthSession;\nvar _c;\n$RefreshReg$(_c, \"AuthSession\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;AAoBA,kBAAyB;AACzB,qBAAkC;AApBlC,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kCAAoC,EAAE;AAAA,EAC/E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA6B;AAC7B,cAAY,IAAI,eAAe;AACjC;AAoBe,SAAR,cAA+B;AACpC,SAAO;AACT;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,aAAa;AAE9B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
